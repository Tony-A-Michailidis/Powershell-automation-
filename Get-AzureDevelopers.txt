$Connection = Get-AutomationConnection -Name "AzureRunAsConnection"
$AzureProfile = Connect-AzAccount `
    -Tenant $Connection.TenantId `
    -CertificateThumbprint $Connection.CertificateThumbprint `
    -ApplicationId $Connection.ApplicationId `
    -ServicePrincipal
$AzureProfile.Context.Subscription
#Connect to Azure Active Directory.
Connect-AzureAD  -tenantId $Connection.TenantID -CertificateThumbprint $Connection.CertificateThumbprint  -ApplicationId  $Connection.ApplicationID   
Write-Output "**********************"

#Global vars
$azureSyncDeveloperGroupId = "bf08489e-d1a0-4b6c-b527-42c6a16060ec";

#Get all users who have logged into the Azure Portal or Azure DevOps Portal in the last X days.
$query = @'
SigninLogs 
| where (AppDisplayName == 'Azure Portal' or AppDisplayName == 'Azure DevOps') and CreatedDateTime >= ago(30d) and ResultType == "0"
| project UserDisplayName, UserId, AppDisplayName
| summarize makelist(AppDisplayName) by UserDisplayName, UserId
'@

$workspace = Get-AzOperationalInsightsWorkspace -Name "MGMT-PROD-LOGS" -ResourceGroupName "common-rg"
$queryResults = Invoke-AzOperationalInsightsQuery -WorkspaceId $workspace.CustomerId -Query $query

#Get all members of the Azure - SyncDeveopers group.
$devMembers = Get-AzureADGroupMember -ObjectId $azureSyncDeveloperGroupId -All $true

#Get missing users
$userList = $queryResults.Results.UserId | Select-Object -Unique

$newUsers = $userList | Where { $devMembers.ObjectId -NotContains $_ };

Write-Output "*********"
Write-Output $devMembers.ObjectId
Write-Output "*********"

#Get old users
$oldUsers = $devMembers.ObjectId | Where { $queryResults.Results.UserId -NotContains $_ };

#Remove old users
foreach($oldUser in $oldUsers)
{
    try
    {
        Remove-AzureADGroupMember -ObjectId $azureSyncDeveloperGroupId -MemberId $oldUser;
        Write-Output "Remove user: $oldUser";
    }
    catch
    {
        Write-Output "Failed to remove $oldUser";
        Write-Output "$_";
    }
}

#Add new users
foreach($newUser in $newUsers)
{
    try
    {
        Add-AzureADGroupMember -ObjectId $azureSyncDeveloperGroupId -RefObjectId $newUser;
        Write-Output "Add user: $newUser";
    }
    catch
    {
        Write-Output "Failed to add $newUser";
        Write-Output "$_";
    }
}

Write-Output "Sync Complete."